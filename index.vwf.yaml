--- 
extends: http://vwf.example.com/scene.vwf
properties:
  keyPressInfo:
  moveSpeed: 2.5
children:
  board:
    extends: http://vwf.example.com/node3.vwf
    source: board.dae
    properties:
      xPos: 0
      yPos: 0
  playerOne:
    extends: http://vwf.example.com/node3.vwf
    source: ball.dae
    properties:
      xPos: 0
      yPos: 0
    children:
      playerOneMaterial:
        extends: http://vwf.example.com/material.vwf
        properties:
          color: "#0000ff"
  light:
    extends: http://vwf.example.com/light.vwf
    properties:
      distance: 2000
      translation: [ 400, -400, 900 ]
methods:
  initializeCamera:
  update:
  movePlayer:
scripts:
- |
    this.initialize = function() {
      this.future( 0 ).initializeCamera();
      this.future( 0 ).update();
    }
    this.initializeCamera = function() {
      this.camera.translation = [ 250, -550, 150 ];
      this.camera.rotation = [ 1, 0, 0, -10 ];

      // Disable navigation
      this.camera.touchmode = "none";
      this.camera.navmode = "none";
    }
    this.update = function() {
      if ( this.keyPressInfo ) {
        for ( var keyPress in this.keyPressInfo.keysDown ) {
          switch( keyPress ) {
            case 'W':
              this.movePlayer(this.playerOne, 'U');
              break;
            case 'A':
              this.movePlayer(this.playerOne, 'L');
              break;
            case 'S':
              this.movePlayer(this.playerOne, 'D');
              break;
            case 'D':
              this.movePlayer(this.playerOne, 'R');
              break;
            default:
              break;
          }
        }
      }
      this.future( 1.0/60.0 ).update();  // schedule the next step
    }

    this.movePlayer = function( player, direction ) {
   	  if(player.translation[ 0 ] + this.moveSpeed >= 500 || player.translation[ 0 ] + this.moveSpeed <= -500) {
        console.log("Can't move in x direction");
   	  } 
   	  else {
   	    if(player.translation[ 1 ] + this.moveSpeed >= 120 || player.translation[ 1 ] + this.moveSpeed <= -120) {
   	  	  console.log("Can't move in y direction");
   	    } 
   	    else {
          switch( direction ) {
            case 'U':
              player.translateBy( [0, this.moveSpeed, 0]);
              break;
            case 'L':
              player.translateBy( [(-1 * this.moveSpeed), 0, 0]);
              break;
            case 'D':
              player.translateBy( [0, (-1 * this.moveSpeed), 0]);
              break;
            case 'R':
              player.translateBy( [this.moveSpeed, 0, 0]);
              break;
            default:
              break;
          }
   	  	}
      }
    }
	
    this.keyDown = this.keyUp = function( input ) {
      this.keyPressInfo = input;
    }